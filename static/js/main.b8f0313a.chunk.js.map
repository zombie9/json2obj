{"version":3,"sources":["components/AppHeader.js","components/JsonInput.js","components/ObjOutput.js","components/AppContainer.js","utils/jsonToObjConverter.js","App.js","index.js"],"names":["AppHeader","className","JsonInput","setJson","error","jsonRef","useRef","Form","Control","as","placeholder","spellCheck","style","height","fontSize","ref","Button","onClick","json","current","value","Alert","variant","ObjOutput","obj","singleQuotes","setSingleQuotes","twoSpace","setTwoSpace","useState","editor","setEditor","copied","setCopied","codeMirrorRef","handleChangeQuotes","handleChangeIndent","useEffect","id","editorDidMount","options","lineWrapping","mode","theme","lineNumbers","Check","label","name","type","checked","onChange","disabled","execCommand","console","log","doc","size","navigator","clipboard","writeText","AppContainer","jsonError","setJsonError","setObj","object","JSON","parse","prettyObject","stringifyObject","indent","e","jsonToObjConverter","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8f0313a.chunk.js","sourcesContent":["import React from 'react'\n\nconst AppHeader = () => {\n  return (\n    <>\n      <h1 className=\"mb-4 mt-3\">\n        <span className=\"text-primary\">json</span>\n        <span className=\"text-white\">2</span>\n        <span className=\"text-primary\">obj</span>\n      </h1>\n    </>\n  )\n}\n\nexport default AppHeader\n","import React, { useRef } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\n\nconst JsonInput = ({ setJson, error }) => {\n  const jsonRef = useRef('')\n  const handleSubmit = () => {\n    const json = jsonRef.current.value\n    setJson(json)\n  }\n  const handleClear = () => {\n    jsonRef.current.value = ''\n  }\n  return (\n    <div className=\"mb-3\">\n      <Form.Control\n        as=\"textarea\"\n        placeholder=\"Paste JSON here\"\n        className=\"font-monospace bg-secondary text-white\"\n        spellCheck=\"false\"\n        style={{ height: '500px', fontSize: '12px'}}\n        ref={jsonRef}\n      />\n      <div className=\"mt-3 d-flex flex-row\">\n        <Button className=\"me-3\" onClick={handleSubmit}>Convert</Button>\n        <Button className=\"me-3\" onClick={handleClear}>Clear</Button>\n        {error && <Alert variant=\"danger\">Please Enter Valid JSON</Alert>}\n      </div>     \n    </div>\n  )\n}\n\nexport default JsonInput\n","import React, { useRef, useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material-palenight.css'\nimport 'codemirror/mode/javascript/javascript'\nimport { Controlled as CodeMirror } from 'react-codemirror2-react-17'\n\nconst ObjOutput = ({ obj, singleQuotes, setSingleQuotes, twoSpace, setTwoSpace }) => {\n  const [editor, setEditor] = useState()\n  const [copied, setCopied] = useState(false)\n  const codeMirrorRef = useRef()\n  const handleChangeQuotes = () => {\n    setSingleQuotes(!singleQuotes)\n  }\n  const handleChangeIndent = () => {\n    setTwoSpace(!twoSpace)\n  }\n  useEffect(() => {\n    setCopied(false)\n  }, [obj, singleQuotes, twoSpace])\n\n  return (\n    <>      \n      <CodeMirror\n        id=\"obj\"\n        ref={codeMirrorRef}\n        value={obj}\n        className=\"code-mirror-wrapper\"\n        editorDidMount={editor => setEditor(editor)}\n        options={{\n          lineWrapping: true,\n          mode: 'javascript',\n          theme: 'material-palenight',\n          lineNumbers: true\n        }}\n      />\n      \n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"border border-white rounded mt-3 me-3 px-3 py-2 bg-secondary small\">\n          <Form className=\"d-inline-block me-5\">\n            <div key=\"inline-radio\" className=\"text-white\">\n              <Form.Check\n                label=\"Single quotes\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={singleQuotes}\n                onChange={handleChangeQuotes}\n              />\n              <Form.Check\n                label=\"Double quotes\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={!singleQuotes}\n                onChange={handleChangeQuotes}\n              />\n            </div>\n          </Form>\n          <Form className=\"d-inline-block\">\n            <div key=\"inline-radio\" className=\"text-white\">\n              <Form.Check\n                label=\"2-Space indent\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={twoSpace}\n                onChange={handleChangeIndent}\n              />\n              <Form.Check\n                label=\"4-space indent\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={!twoSpace}\n                onChange={handleChangeIndent}\n              />\n            </div>\n          </Form>\n        </div>\n        \n        <Button\n          className=\"mt-3\"\n          disabled={copied}\n          onClick={() => {\n            editor.execCommand('selectAll')\n            console.log(editor.doc.size)\n            navigator.clipboard.writeText(obj)\n            setCopied(true)\n          }}\n        >\n          {copied ? 'Copied' : 'Copy'}\n        </Button>\n      </div>     \n    </>\n  )\n}\n\nexport default ObjOutput\n","import React, { useState, useEffect } from 'react'\nimport AppHeader from './AppHeader'\nimport { Container } from 'react-bootstrap'\nimport JsonInput from './JsonInput'\nimport ObjOutput from './ObjOutput'\nimport { jsonToObjConverter } from '../utils/jsonToObjConverter'\n\nconst AppContainer = () => {\n  const [json, setJson] = useState('')\n  const [jsonError, setJsonError] = useState(false)\n  const [obj, setObj] = useState(json)\n  const [singleQuotes, setSingleQuotes] = useState(true)\n  const [twoSpace, setTwoSpace] = useState(true)\n  \n  useEffect(() => {\n    const object = jsonToObjConverter(json, singleQuotes, twoSpace, setJsonError)\n    !!object && setObj(object)\n  }, [json, singleQuotes, twoSpace])\n  \n  return (\n    <Container>\n      <AppHeader />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <JsonInput error={jsonError} setJson={setJson}/>\n        </div>\n        <div className=\"col-md-6\">\n          <ObjOutput \n            obj={obj}\n            singleQuotes={singleQuotes}\n            setSingleQuotes={setSingleQuotes}\n            twoSpace={twoSpace}\n            setTwoSpace={setTwoSpace}\n          />\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default AppContainer\n","import stringifyObject from \"stringify-object\"\n\nexport const jsonToObjConverter = (json, singleQuotes, twoSpace, setJsonError) => {\n  if (!json) return\n  try {\n    const object = JSON.parse(json)\n    const prettyObject = stringifyObject(object, {\n      indent: twoSpace ? '  ' : '    ',\n      singleQuotes: singleQuotes\n    })\n    setJsonError(false)\n    return prettyObject\n  } catch (e) {\n    setJsonError(true)\n  }\n}\n","import './App.scss';\nimport AppContainer from './components/AppContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}