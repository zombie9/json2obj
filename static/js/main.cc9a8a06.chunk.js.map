{"version":3,"sources":["components/AppHeader.js","components/Input.js","components/Output.js","utils/constants.js","components/AppContainer.js","utils/jsonToObjConverter.js","utils/objToJsonConverter.js","App.js","index.js"],"names":["AppHeader","isJsonToObj","setIsJsonToObj","setError","className","onClick","xmlns","width","height","fill","viewBox","d","fillRule","Input","setInput","error","useState","value","setValue","id","onBeforeChange","_","__","options","lineWrapping","mode","theme","lineNumbers","Button","Alert","variant","message","Output","output","singleQuotes","setSingleQuotes","twoSpace","setTwoSpace","editor","setEditor","copied","setCopied","handleChangeQuotes","handleChangeIndent","useEffect","editorDidMount","Form","Check","label","name","type","checked","onChange","disabled","execCommand","navigator","clipboard","writeText","errorMessage","AppContainer","input","setOutput","converted","json","setJsonError","object","JSON","parse","prettyObject","stringifyObject","indent","jsonToObjConverter","obj","newQuotedKeysString","replace","newObject","stringify","objToJsonConverter","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc9a8a06.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppHeader = ({ isJsonToObj, setIsJsonToObj, setError }) => {\n  const handleSwitch = () => {\n    setIsJsonToObj(!isJsonToObj);\n    setError(false);\n  };\n  return (\n    <h1 className=\"mb-4 mt-3\">\n      <span>\n        <span className=\"text-primary\">{isJsonToObj ? 'json' : 'obj'}</span>\n        <span className=\"text-white\">2</span>\n        <span className=\"text-primary\">{isJsonToObj ? 'obj' : 'json'}</span>\n        <span className=\"text-white ms-2\"></span>\n      </span>\n      <span>\n        <button className=\"border-0 bg-transparent\" onClick={handleSwitch}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"28\"\n            height=\"28\"\n            fill=\"white\"\n            className=\"switchButton\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\" />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\n            />\n          </svg>\n        </button>\n      </span>\n    </h1>\n  );\n};\n\nexport default AppHeader;\n","import React, { useState } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material-palenight.css';\nimport 'codemirror/mode/javascript/javascript';\nimport { Controlled as CodeMirror } from 'react-codemirror2-react-17';\n\nconst Input = ({ setInput, error, setError }) => {\n  const [value, setValue] = useState();\n\n  const handleClear = () => {\n    setValue('');\n    setError(false);\n  };\n  return (\n    <div className=\"mb-3\">\n      <CodeMirror\n        id=\"obj\"\n        value={value}\n        className=\"code-mirror-wrapper\"\n        onBeforeChange={(_, __, value) => {\n          setValue(value);\n        }}\n        options={{\n          lineWrapping: true,\n          mode: 'javascript',\n          theme: 'material-palenight',\n          lineNumbers: true\n        }}\n      />\n      <div className=\"mt-3 d-flex flex-row\">\n        <Button className=\"me-3\" onClick={() => setInput(value)}>\n          Convert\n        </Button>\n        <Button className=\"me-3\" onClick={handleClear}>\n          Clear\n        </Button>\n        {error && <Alert variant=\"danger\">{error.message}</Alert>}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material-palenight.css';\nimport 'codemirror/mode/javascript/javascript';\nimport { Controlled as CodeMirror } from 'react-codemirror2-react-17';\n\nconst Output = ({ output, singleQuotes, setSingleQuotes, twoSpace, setTwoSpace, isJsonToObj }) => {\n  const [editor, setEditor] = useState();\n  const [copied, setCopied] = useState(false);\n  const handleChangeQuotes = () => {\n    setSingleQuotes(!singleQuotes);\n  };\n  const handleChangeIndent = () => {\n    setTwoSpace(!twoSpace);\n  };\n  useEffect(() => {\n    setCopied(false);\n  }, [output, singleQuotes, twoSpace]);\n\n  return (\n    <>\n      <CodeMirror\n        id=\"obj\"\n        value={output}\n        className=\"code-mirror-wrapper\"\n        editorDidMount={(editor) => setEditor(editor)}\n        options={{\n          lineWrapping: true,\n          mode: 'javascript',\n          theme: 'material-palenight',\n          lineNumbers: true\n        }}\n      />\n\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"border border-white rounded mt-3 me-3 px-3 py-2 bg-secondary small\">\n          {isJsonToObj && (\n            <Form className=\"d-inline-block me-5\">\n              <div key=\"inline-radio\" className=\"text-white\">\n                <Form.Check\n                  label=\"Single quotes\"\n                  name=\"quotes\"\n                  type=\"radio\"\n                  checked={singleQuotes}\n                  onChange={handleChangeQuotes}\n                />\n                <Form.Check\n                  label=\"Double quotes\"\n                  name=\"quotes\"\n                  type=\"radio\"\n                  checked={!singleQuotes}\n                  onChange={handleChangeQuotes}\n                />\n              </div>\n            </Form>\n          )}\n          <Form className=\"d-inline-block\">\n            <div key=\"inline-radio\" className=\"text-white\">\n              <Form.Check\n                label=\"2-Space indent\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={twoSpace}\n                onChange={handleChangeIndent}\n              />\n              <Form.Check\n                label=\"4-space indent\"\n                name=\"quotes\"\n                type=\"radio\"\n                checked={!twoSpace}\n                onChange={handleChangeIndent}\n              />\n            </div>\n          </Form>\n        </div>\n\n        <Button\n          className=\"mt-3\"\n          disabled={copied}\n          onClick={() => {\n            editor.execCommand('selectAll');\n            navigator.clipboard.writeText(output);\n            setCopied(true);\n          }}\n        >\n          {copied ? 'Copied' : 'Copy'}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Output;\n","export const errorMessage = {\n  JSON: 'Please enter valid JSON',\n  OBJECT: 'Please enter valid JavaScipt Object'\n};\n","import React, { useState, useEffect } from 'react';\nimport AppHeader from './AppHeader';\nimport { Container } from 'react-bootstrap';\nimport Input from './Input';\nimport Output from './Output';\nimport { jsonToObjConverter } from '../utils/jsonToObjConverter';\nimport { objToJsonConverter } from '../utils/objToJsonConverter';\n\nconst AppContainer = () => {\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState(input);\n  const [error, setError] = useState(false);\n  const [singleQuotes, setSingleQuotes] = useState(true);\n  const [twoSpace, setTwoSpace] = useState(true);\n  const [isJsonToObj, setIsJsonToObj] = useState(true);\n\n  useEffect(() => {\n    const converted = isJsonToObj\n      ? jsonToObjConverter(input, singleQuotes, twoSpace, setError)\n      : objToJsonConverter(input, twoSpace, setError);\n    !!converted && setOutput(converted);\n  }, [isJsonToObj, input, singleQuotes, twoSpace]);\n\n  return (\n    <Container>\n      <AppHeader isJsonToObj={isJsonToObj} setIsJsonToObj={setIsJsonToObj} setError={setError} />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Input error={error} setError={setError} setInput={setInput} />\n        </div>\n        <div className=\"col-md-6\">\n          <Output\n            output={output}\n            singleQuotes={singleQuotes}\n            setSingleQuotes={setSingleQuotes}\n            twoSpace={twoSpace}\n            setTwoSpace={setTwoSpace}\n            isJsonToObj={isJsonToObj}\n          />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default AppContainer;\n","import stringifyObject from 'stringify-object';\nimport { errorMessage } from './constants';\n\nexport const jsonToObjConverter = (json, singleQuotes, twoSpace, setJsonError) => {\n  if (!json || json === '') return;\n  try {\n    const object = JSON.parse(json);\n    const prettyObject = stringifyObject(object, {\n      indent: twoSpace ? '  ' : '    ',\n      singleQuotes: singleQuotes\n    });\n    setJsonError(false);\n    return prettyObject;\n  } catch (error) {\n    setJsonError({ message: errorMessage.JSON });\n  }\n};\n","import { errorMessage } from './constants';\n\nexport const objToJsonConverter = (obj, twoSpace, setJsonError) => {\n  if (!obj) return;\n  try {\n    const doubleQuoteString = obj.replace(/'/g, '\"');\n    const objKeysRegex = /({|,)(?:\\s*)(?:')?([A-Za-z_$.][A-Za-z0-9_ \\-.$]*)(?:')?(?:\\s*):/g;\n    const newQuotedKeysString = doubleQuoteString.replace(objKeysRegex, '$1\"$2\":');\n    const newObject = JSON.parse(newQuotedKeysString);\n    const indent = twoSpace ? '  ' : '    ';\n    return JSON.stringify(newObject, null, indent);\n  } catch (error) {\n    setJsonError({ message: errorMessage.OBJECT });\n  }\n};\n","import React from 'react';\nimport './App.scss';\nimport AppContainer from './components/AppContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}